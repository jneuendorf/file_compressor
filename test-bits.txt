

just writing lengths (they are alternating):
0 is delimiter


!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!! EXAMPLE:


1st 52 bits: 0101000001001011000000110000010000010100000000000000

   1 1 1 1 5   1 2  1 1 2  6   2  5   1 5   1 1 1 14
=> 1 1 1 1 101 1 10 1 1 10 110 10 101 1 101 1 1 1 1110

longest bloch has length = 14 = 1110 = 4 bits
subtract 1 because its implicit and can maybe save 1 bit for each block
=> length = 13 = 1101 = 4 bits
every length block is therefore 4 bits long
=> 0001 0001 0001 0001 0101 0001 0010 0001 0001 0010 0110 0010 0101 0001 0101 0001 0001 0001 1110
=> 19 * 4 = 76 char (orig was 52 chars => no compression)

so when does the algorithm actually shrink size??

true <=> average same-bit-block size > average length-block size <=> average same-bit-block size > length-block size
<=> sum(block sizes)/block-sizes > decToBin(length(longest bit block) - 1)

in this case:
avg same-bit-block size:
1 + 1 + 1 + 1 + 5 + 1 + 2+ 1 + 1 + 2+ + 6 + 2 + 5 + 1 + 5 + 1 + 1 + 1 + 14 = 52
-> 52 / 19 = 2.736842
longest block size = 14 --> binary: 1101
==> 2.737 >? 4 <=> false => no compression

NEXT IDEA:

find sub patterns (as long as possible and have a mapping for them and create a sequence of mapping keys)


0101000001001011000000110000010000010100000000000000 (52)

longest = 010100000 <-- idx = 0

=> [0]1001011000000110000010000[0]000000000

next = 1100000 <-- idx = 1

=> [0]10010[1]0[1]10000[0]000000000

next = 000000000 <-- idx = 2

=> [0]10010[1]0[1]10000[0][2]

next = 10010 <-- idx = 3

=> [0][3][1]0[1]10000[0][2]

=> [0][3][1]0[1][4][0][2]

=> [0][3][1][5][1][4][0][2]

max index = 5 => requires 3 bits (= 101)
so in binary:

000 011 001 101 001 100 000 010 = 000011001101001100000010 (24)

mapping in header (need to know longest sequence and max index):
longest sequence = 9 bits => 9 bits
max index = 5
==> 6 entries with 9 bits each (= 6 * 9 bits = 54)

-.- thats already more than the original...

sequences:
010100000
1100000
000000000
10010
10000
0
(length of all sequences = 36)
==> 36 + 24 = 60 => 8 chars more than original





try different order:



seq = 00000 <-- idx = 0

=> 0101[0]1001011[0]011[0]1[0]101[0]0000

seq = 101 <-- idx = 1

=> 0[1][0]100[1]1[0]011[0]1[0][1][0]0000

seq = 0000 <-- idx = 2

=> 0[1][0]100[1]1[0]011[0]1[0][1][0][2]

seq = 100 <-- idx = 3
=> 0[1][0][3][1]1[0]011[0]1[0][1][0][2]

seq = 011 <-- idx = 4
=> 0[1][0][3][1]1[0][4][0]1[0][1][0][2]

seq = 1 <-- idx = 5
=> 0[1][0][3][1][5][0][4][0][5][0][1][0][2]

seq = 0 <-- idx = 6
=> [6][1][0][3][1][5][0][4][0][5][0][1][0][2]

==> binary: 110 001 000 011 001 101 000 100 000 101 000 001 000 010 = 110001000011001101000100000101000001000010 (42)







length = 4368





octave script for polynomial regression...but that's too inaccurate
t = [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20];
y = [80 75 3 4 20 0 8 0 8 0 115 76 85 69 0 0 0 0 0 0 0];
p = polyfit(t,y,19)

t2 = 0:0.1:20.0;
y2 = polyval(p,t2);
figure
plot(t,y,'o',t2,y2)
title('Plot of Data (Points) and Model (Line)')

for i = 1:length(t)
  y(i)-y2(i)
end

% x = [1 2 3 4 5 6 7 8 9 10];
%y1 = [.16 .08 .04 .02 .013 .007 .004 .002 .001 .0008 ];
%y2 = [.16 .07 .03 .01 .008 .003 .0008 .0003 .00007 .00002 ];

%semilogy(x,y1,'-bo;y1;',x,y2,'-kx;y2;');
%title('Plot title');
%xlabel('X Axis');
%ylabel('Y Axis');

%print -deps graph.eps
